name: Deploy Go Web App

on:
  push:
    branches: [ main ]  # Trigger the action on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-20.04  # Using an older Ubuntu version for building
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'  # Latest stable version as of April 2024

    - name: Build
      env:
        CGO_ENABLED: 0
        GOOS: linux
        GOARCH: amd64
      run: go build -a -ldflags '-extldflags "-static"' -o main

    - name: Create deployment package
      run: |
        mkdir deploy
        cp -r * deploy/
        tar -czf deploy.tar.gz deploy

    - name: Deploy to VPS
      env:
        PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
        HOST: ${{ secrets.SERVER_HOST }}
        USER: ${{ secrets.SERVER_USER }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        scp -i private_key -o StrictHostKeyChecking=no deploy.tar.gz $USER@$HOST:/home/$USER/deploy.tar.gz
        ssh -i private_key -o StrictHostKeyChecking=no $USER@$HOST '
          sudo service goweb stop &&
          sudo rm -rf /go-web/* &&
          sudo tar -xzf /home/$USER/deploy.tar.gz -C /go-web --strip-components=1 &&
          sudo cp /env/app.env /go-web/app.env &&
          sudo service goweb start &&
          sudo mkdir -p /logs &&
          echo "Deployment completed at $(date)" | sudo tee -a /logs/deployment.log &&
          echo "Service status:" | sudo tee -a /logs/deployment.log &&
          sudo service goweb status | sudo tee -a /logs/deployment.log &&
          echo "----------------------------------------" | sudo tee -a /logs/deployment.log &&
          rm /home/$USER/deploy.tar.gz
        '
        rm -f private_key
